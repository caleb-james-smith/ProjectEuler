// prob_002.rs

// Problem 2
//
// Even Fibonacci Numbers
//
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// 
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.
// 

// import standard library types
use std::time::Instant;

// Solve the problem
fn solve(max_n: i32) -> i32 {
    println!("Running solve()... go go go!");
    println!("max_n: {max_n}");
    
    // Since we plan to change result, we need to make it mutable using "mut".
    let mut result: i32 = 0;
    
    println!("Completed solve()!");
    result
}

// This is the main function.
fn main() {
    let start_time  = Instant::now();
    let max_n: i32  = 1_000;
    let answer: i32 = solve(max_n);
    let end_time    = Instant::now();
    
    let run_time = end_time.duration_since(start_time);

    println!("answer: {answer}");
    println!("run time: {:.2?}", run_time);
}


